<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="com.neuedu.model.Product">
    <id column="PRODID" jdbcType="INTEGER" property="prodid" />
    <result column="PRODNAME" jdbcType="VARCHAR" property="prodname" />
    <result column="PRODCOUNT" jdbcType="DOUBLE" property="prodcount" />
    <result column="PROVID" jdbcType="INTEGER" property="provid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PRODID, PRODNAME, PRODCOUNT, PROVID
  </sql>
  <select id="selectByExample" parameterType="com.neuedu.model.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectAll" parameterType="com.neuedu.model.ProductExample" resultMap="BaseResultMap">
    select p.PRODID, p.PRODNAME, b.BUYCOUNT, p.PRODCOUNT, b.PROVID, b.BUYID from buy as b, product as p where b.PROVID = p.PROVID
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select p.PRODID, p.PRODNAME, b.BUYCOUNT, p.PRODCOUNT, b.PROVID, b.BUYID from buy as b, product as p where b.PROVID = p.PROVID and p.PRODID = #{prodid,jdbcType=INTEGER}
  </select>
  
  <select id="findByBuyId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select p.PRODID, p.PRODNAME, b.BUYCOUNT, p.PRODCOUNT, b.PROVID, b.BUYID from buy as b, product as p where b.PROVID = p.PROVID and b.BUYID = #{buyid,jdbcType=INTEGER}
  </select>
  
  <update id="update" parameterType="com.neuedu.model.ProductExample" >  
    UPDATE buy b , product p SET b.BUYCOUNT = #{0}, p.PRODCOUNT = #{1} WHERE p.PRODID = #{2} and b.BUYID = #{3}
  </update>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where PRODID = #{prodid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.model.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.model.Product">
    insert into product (PRODID, PRODNAME, PRODCOUNT, 
      PROVID)
    values (#{prodid,jdbcType=INTEGER}, #{prodname,jdbcType=VARCHAR}, #{prodcount,jdbcType=DOUBLE}, 
      #{provid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.model.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="prodid != null">
        PRODID,
      </if>
      <if test="prodname != null">
        PRODNAME,
      </if>
      <if test="prodcount != null">
        PRODCOUNT,
      </if>
      <if test="provid != null">
        PROVID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="prodid != null">
        #{prodid,jdbcType=INTEGER},
      </if>
      <if test="prodname != null">
        #{prodname,jdbcType=VARCHAR},
      </if>
      <if test="prodcount != null">
        #{prodcount,jdbcType=DOUBLE},
      </if>
      <if test="provid != null">
        #{provid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.model.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.prodid != null">
        PRODID = #{record.prodid,jdbcType=INTEGER},
      </if>
      <if test="record.prodname != null">
        PRODNAME = #{record.prodname,jdbcType=VARCHAR},
      </if>
      <if test="record.prodcount != null">
        PRODCOUNT = #{record.prodcount,jdbcType=DOUBLE},
      </if>
      <if test="record.provid != null">
        PROVID = #{record.provid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set PRODID = #{record.prodid,jdbcType=INTEGER},
      PRODNAME = #{record.prodname,jdbcType=VARCHAR},
      PRODCOUNT = #{record.prodcount,jdbcType=DOUBLE},
      PROVID = #{record.provid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.model.Product">
    update product
    <set>
      <if test="prodname != null">
        PRODNAME = #{prodname,jdbcType=VARCHAR},
      </if>
      <if test="prodcount != null">
        PRODCOUNT = #{prodcount,jdbcType=DOUBLE},
      </if>
      <if test="provid != null">
        PROVID = #{provid,jdbcType=INTEGER},
      </if>
    </set>
    where PRODID = #{prodid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.model.Product">
    update product
    set PRODNAME = #{prodname,jdbcType=VARCHAR},
      PRODCOUNT = #{prodcount,jdbcType=DOUBLE},
      PROVID = #{provid,jdbcType=INTEGER}
    where PRODID = #{prodid,jdbcType=INTEGER}
  </update>
</mapper>