<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.mapper.ScrapMapper">
  <resultMap id="BaseResultMap" type="com.neuedu.model.Scrap">
    <id column="SID" jdbcType="INTEGER" property="sid" />
    <result column="SCOUNT" jdbcType="DOUBLE" property="scount" />
    <result column="STIME" jdbcType="TIMESTAMP" property="stime" />
    <result column="BID" jdbcType="INTEGER" property="bid" />
    <result column="DEPARTID" jdbcType="INTEGER" property="departid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    SID, SCOUNT, STIME, BID, DEPARTID
  </sql>
  <select id="selectByExample" parameterType="com.neuedu.model.ScrapExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from scrap
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <!-- 自己加的 -->
  <select id="selectAll" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * from scrap
  </select>
  
<select id="findBybfdh" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * from scrap where SID = #{sid,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from scrap
    where SID = #{sid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from scrap
    where SID = #{sid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.model.ScrapExample">
    delete from scrap
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.model.Scrap">
    insert into scrap (SID, SCOUNT, STIME, 
      BID, DEPARTID)
    values (#{sid,jdbcType=INTEGER}, #{scount,jdbcType=DOUBLE}, #{stime,jdbcType=TIMESTAMP}, 
      #{bid,jdbcType=INTEGER}, #{departid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.model.Scrap">
    insert into scrap
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        SID,
      </if>
      <if test="scount != null">
        SCOUNT,
      </if>
      <if test="stime != null">
        STIME,
      </if>
      <if test="bid != null">
        BID,
      </if>
      <if test="departid != null">
        DEPARTID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="scount != null">
        #{scount,jdbcType=DOUBLE},
      </if>
      <if test="stime != null">
        #{stime,jdbcType=TIMESTAMP},
      </if>
      <if test="bid != null">
        #{bid,jdbcType=INTEGER},
      </if>
      <if test="departid != null">
        #{departid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.model.ScrapExample" resultType="java.lang.Long">
    select count(*) from scrap
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update scrap
    <set>
      <if test="record.sid != null">
        SID = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.scount != null">
        SCOUNT = #{record.scount,jdbcType=DOUBLE},
      </if>
      <if test="record.stime != null">
        STIME = #{record.stime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bid != null">
        BID = #{record.bid,jdbcType=INTEGER},
      </if>
      <if test="record.departid != null">
        DEPARTID = #{record.departid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update scrap
    set SID = #{record.sid,jdbcType=INTEGER},
      SCOUNT = #{record.scount,jdbcType=DOUBLE},
      STIME = #{record.stime,jdbcType=TIMESTAMP},
      BID = #{record.bid,jdbcType=INTEGER},
      DEPARTID = #{record.departid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.model.Scrap">
    update scrap
    <set>
      <if test="scount != null">
        SCOUNT = #{scount,jdbcType=DOUBLE},
      </if>
      <if test="stime != null">
        STIME = #{stime,jdbcType=TIMESTAMP},
      </if>
      <if test="bid != null">
        BID = #{bid,jdbcType=INTEGER},
      </if>
      <if test="departid != null">
        DEPARTID = #{departid,jdbcType=INTEGER},
      </if>
    </set>
    where SID = #{sid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.model.Scrap">
    update scrap
    set SCOUNT = #{scount,jdbcType=DOUBLE},
      STIME = #{stime,jdbcType=TIMESTAMP},
      BID = #{bid,jdbcType=INTEGER},
      DEPARTID = #{departid,jdbcType=INTEGER}
    where SID = #{sid,jdbcType=INTEGER}
  </update>
</mapper>