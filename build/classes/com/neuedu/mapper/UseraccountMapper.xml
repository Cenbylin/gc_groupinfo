<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.mapper.UseraccountMapper">
  <resultMap id="BaseResultMap" type="com.neuedu.model.Useraccount">
    <id column="USERID" jdbcType="INTEGER" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ACCOUNTS" jdbcType="VARCHAR" property="accounts" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="SEX" jdbcType="VARCHAR" property="sex" />
    <result column="AGE" jdbcType="TIMESTAMP" property="age" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="RAGEDATE" jdbcType="TIMESTAMP" property="ragedate" />
    <result column="RID" jdbcType="INTEGER" property="rid" />
    <result column="DEPARTID" jdbcType="INTEGER" property="departid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ACCOUNTS, PASSWORD, SEX, AGE, PHONE, RAGEDATE, RID, DEPARTID
  </sql>
  <select id="selectByExample" parameterType="com.neuedu.model.UseraccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from useraccount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from useraccount
    where USERID = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from useraccount
    where USERID = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.model.UseraccountExample">
    delete from useraccount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.model.Useraccount">
    insert into useraccount (USERID, USERNAME, ACCOUNTS, 
      PASSWORD, SEX, AGE, 
      PHONE, RAGEDATE, RID, 
      DEPARTID)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{accounts,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{age,jdbcType=TIMESTAMP}, 
      #{phone,jdbcType=VARCHAR}, #{ragedate,jdbcType=TIMESTAMP}, #{rid,jdbcType=INTEGER}, 
      #{departid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.model.Useraccount">
    insert into useraccount
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="accounts != null">
        ACCOUNTS,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="sex != null">
        SEX,
      </if>
      <if test="age != null">
        AGE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="ragedate != null">
        RAGEDATE,
      </if>
      <if test="rid != null">
        RID,
      </if>
      <if test="departid != null">
        DEPARTID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="accounts != null">
        #{accounts,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="ragedate != null">
        #{ragedate,jdbcType=TIMESTAMP},
      </if>
      <if test="rid != null">
        #{rid,jdbcType=INTEGER},
      </if>
      <if test="departid != null">
        #{departid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.model.UseraccountExample" resultType="java.lang.Long">
    select count(*) from useraccount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update useraccount
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.accounts != null">
        ACCOUNTS = #{record.accounts,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        SEX = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        AGE = #{record.age,jdbcType=TIMESTAMP},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.ragedate != null">
        RAGEDATE = #{record.ragedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rid != null">
        RID = #{record.rid,jdbcType=INTEGER},
      </if>
      <if test="record.departid != null">
        DEPARTID = #{record.departid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update useraccount
    set USERID = #{record.userid,jdbcType=INTEGER},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ACCOUNTS = #{record.accounts,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      SEX = #{record.sex,jdbcType=VARCHAR},
      AGE = #{record.age,jdbcType=TIMESTAMP},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      RAGEDATE = #{record.ragedate,jdbcType=TIMESTAMP},
      RID = #{record.rid,jdbcType=INTEGER},
      DEPARTID = #{record.departid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.model.Useraccount">
    update useraccount
    <set>
      <if test="username != null">
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="accounts != null">
        ACCOUNTS = #{accounts,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        SEX = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        AGE = #{age,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="ragedate != null">
        RAGEDATE = #{ragedate,jdbcType=TIMESTAMP},
      </if>
      <if test="rid != null">
        RID = #{rid,jdbcType=INTEGER},
      </if>
      <if test="departid != null">
        DEPARTID = #{departid,jdbcType=INTEGER},
      </if>
    </set>
    where USERID = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.model.Useraccount">
    update useraccount
    set USERNAME = #{username,jdbcType=VARCHAR},
      ACCOUNTS = #{accounts,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=VARCHAR},
      AGE = #{age,jdbcType=TIMESTAMP},
      PHONE = #{phone,jdbcType=VARCHAR},
      RAGEDATE = #{ragedate,jdbcType=TIMESTAMP},
      RID = #{rid,jdbcType=INTEGER},
      DEPARTID = #{departid,jdbcType=INTEGER}
    where USERID = #{userid,jdbcType=INTEGER}
  </update>
</mapper>